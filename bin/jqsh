#!/usr/bin/env bash
# This jq / sh hybrid is to make passing arguments into jq a little easier.

export JQSH_HOME="${BASH_SOURCE[0]%/*}/.."
export JQSH_LIB="${JQSH_HOME}/lib/jq"

opts() {
  printf "%s " "$@"
}

arg_int() {
  case $2 in
    null)
      argjson "$1" '{}'
    ;;
    *)
      argjson "$1" "$2"
    ;;
  esac
}

arg_boolean() {
  case $2 in
    null)
      argjson "$1" '{}'
    ;;
    *)
      printf "%s %s " "--argjson $1" "$2"
    ;;
  esac
}

arg_array() { local name=$1; shift
  argjson "$name" "$(printf '%q\n' "${@}" | values2json)"
}

arg() { local name=$1; shift
  case $1 in
    null)
      argjson "$name" '{}'
    ;;
    *)
      printf "%s %q " "--arg $name" "$@"
    ;;
  esac
}

#####

argjson() { local name=$1; shift
  if [ $# -gt 1 ]; then
    value=$(values2json "$@")
  else
    value="$*"
  fi

  printf "%s %q " "--argjson $name" "$value"
}

values2json() {
  jq --raw-input . |
    jq --slurp --compact-output .
}

__JQ__() {
  # TODO maybe this could be improved?
  echo -n "'$(
    sed -n '/^__JQ__$/, ${//!p;}' "$script" |
    grep -v '^#'
  )'"
  exit
}

module_dir() {
  echo "$(dirname "${script}")/../lib"
}


script="$1"; shift

if grep -q '^__JQ__$' "$script"; then
  # shellcheck disable=SC1090
  cmd="jq -L~/.jq -L../lib/jq -L../lib -L'$(module_dir)' -L'${JQSH_LIB}' $(source "$script")"
  ${DEBUG:-false} && >&2 echo $cmd
                         eval $cmd
else
  cat
fi
